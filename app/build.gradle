apply plugin: 'com.android.application'

import org.tmatesoft.svn.core.wc.*

//获取当前时间
def getCurrentTime() {
    return new Date().format("yyyyMMddHHmmss", TimeZone.getTimeZone("UTC"))
}

//获取SVN代码提交的版本号
def getSvnRevision() {
    ISVNOptions options = SVNWCUtil.createDefaultOptions(true);
    SVNClientManager clientManager = SVNClientManager.newInstance(options);
    SVNStatusClient statusClient = clientManager.getStatusClient();
    SVNStatus status = statusClient.doStatus(projectDir, false);
    SVNRevision revision = status.getCommittedRevision();
    return revision.getNumber();
}

android {
    compileSdkVersion 26
    defaultConfig {
        applicationId "com.saiyi.smartkeycabinet"
        minSdkVersion 14
        targetSdkVersion 26
        versionCode 14
        versionName "1.1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        release {
            keyAlias 'smart_key_cabinet'
            keyPassword '123456'
            storeFile file('../app/wdoc/key/SmartKeyCabinet.jks')
            storePassword '123456'
        }

    }

    flavorDimensions("default")

    productFlavors {

        //默认功能的程序
        flavors_default {
            applicationId "com.saiyi.smartkeycabinet"
            buildConfigField("String", "releaseName", "\"正式版\"")
        }

        //工具版本的程序
        flavors_tools {
            applicationId "com.saiyi.smartkeycabinet.tool"
            buildConfigField("String", "releaseName", "\"测试工具\"")
        }

    }

    buildTypes {
        release {
            buildConfigField "String", "CodeVersion", "\"${getSvnRevision()}\""//代码版本就是SVN提交代码的版本号
            minifyEnabled false
            debuggable false
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            applicationVariants.all { variant ->
                def pgName = variant.productFlavors.get(0).getBuildConfigFields().get("releaseName").value.replaceAll("\"", "");
                        variant.outputs.all {
                    //输出apk名称为：SmartKeyCabinet_release_[版本名]_[打包时间]_[SVN代码版本]
                    outputFileName = "SmartKeyCabinet_${pgName}_v${defaultConfig.versionName}_${getCurrentTime()}_${getSvnRevision()}.apk"
                }
            }
        }


        debug {
            buildConfigField "String", "CodeVersion", "\"0\""//debug环境下无代码版本
            minifyEnabled false
            debuggable true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support:appcompat-v7:26.1.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    //ButterKnife
    implementation 'com.jakewharton:butterknife:8.8.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'

    //ZXing 二维码
    implementation 'com.google.zxing:core:3.2.1'
    implementation 'com.google.zxing:android-core:3.2.1'

    //快速开发库
    implementation project(':lib.fast')
    //钥匙位驱动库
    implementation project(':lib.keyposition')
    //指纹驱动库
    implementation project(':lib.fingerprint_bybc05')
    //rdidm dfo2刷卡器驱动器库
    implementation project(':lib.rfidm_df02')
    //锁板驱动器库
    implementation project(':lib.lockplate')
    //串口通信库
    implementation project(':lib.serialport')
    //bug检查库
    implementation project(':lib.bugly')
}
